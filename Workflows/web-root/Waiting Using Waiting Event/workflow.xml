<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item6" object-name="workflow:name=generic" id="80ed3999-640b-4888-ad6e-a1e6afa1dfeb" editor-version="2.0" version="0.0.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
    <display-name>Waiting Using Waiting Event</display-name>
    <description>This workflow illustrates how to make a workflow wait using the Waiting Event schema element.</description>
    <position y="65.0" x="50.0"/>
    <input>
        <param name="vm" type="VC:VirtualMachine">
            <description>Virtual machine to power off</description>
        </param>
    </input>
    <output/>
    <attrib name="powerState" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="PowerOperationTask" type="VC:Task">
        <value encoded="n"/>
        <description>The task object returned by the vCenter server when the power operation is submitted.</description>
    </attrib>
    <attrib name="host" type="VC:HostSystem">
        <value encoded="n">dunes://service.dunes.ch/CustomSDKObject?id='sa-vcsa-01.vclass.local%2Cid:host-1013'&amp;dunesName='VC:HostSystem'</value>
    </attrib>
    <attrib name="errorCode" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="logTaskProgress" type="boolean">
        <value encoded="n">true</value>
        <description>Should the workflow log the progress of the power on/off task?</description>
    </attrib>
    <attrib name="pollRate" type="number">
        <value encoded="n"/>
        <description>How frequently should the wait() poll?</description>
    </attrib>
    <attrib name="taskResult" type="Any">
        <value encoded="n"/>
        <description>Result of the power on/off task</description>
    </attrib>
    <attrib name="taskTrigger" type="Trigger">
        <value encoded="n"/>
    </attrib>
    <workflow-item name="item1" type="switch" comparator="0">
        <display-name>Switch</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
if (powerState.match("poweredOn") !== null) {
  return "item4";
} else if (powerState.match("poweredOff") !== null) {
  return "item2";
} else if (true) {
  return "item3";
}
</script>
        <in-binding>
            <bind name="powerState" type="string" export-name="powerState"/>
        </in-binding>
        <out-binding/>
        <description>Basic switch activity based on a workflow attribute or parameter.</description>
        <condition name="powerState" type="string" comparator="2" label="item4">poweredOn</condition>
        <condition name="powerState" type="string" comparator="2" label="item2">poweredOff</condition>
        <condition name="" type="boolean" comparator="6" label="item3"></condition>
        <position y="75.0" x="270.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item9" type="task" comparator="0">
        <display-name>Powered off</display-name>
        <script encoded="false">System.log("VM is powered off");</script>
        <in-binding/>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="77.3984375" x="402.0"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item5" type="task" comparator="0">
        <display-name>Unexpected power state</display-name>
        <script encoded="false">System.warn("Unexpected power state");</script>
        <in-binding/>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="139.296875" x="404.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item8" type="task" comparator="0">
        <display-name>Powered on</display-name>
        <script encoded="false">System.log("VM is powered on");</script>
        <in-binding/>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="20.0" x="400.0"/>
    </workflow-item>
    <workflow-item name="item5" throw-bind-name="errorCode" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="131.296875" x="575.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item1" type="task" comparator="0">
        <display-name>Determine power state</display-name>
        <script encoded="false">powerState = vm.runtime.powerState.toString();

// FYI... The .toString() is needed because powerState is not a String.
// Rather, it is a VcVirtualMachinePowerState.</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="powerState" type="string" export-name="powerState"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="75.0" x="140.0"/>
    </workflow-item>
    <workflow-item name="item7" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="68.09680035721841" x="923.8976785761512"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item12" type="task" script-module="com.vmware.library.vc.vm.power/forcePowerOff" comparator="0">
        <display-name>Power Off VM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").forcePowerOff(vm);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="PowerOperationTask"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="20.0" x="531.0"/>
    </workflow-item>
    <workflow-item name="item9" out-name="item12" type="task" script-module="com.vmware.library.vc.vm.power/startVM" comparator="0">
        <display-name>Power On VM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").startVM(vm,host);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="host" type="VC:HostSystem" export-name="host"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="PowerOperationTask"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="77.3984375" x="532.0"/>
    </workflow-item>
    <workflow-item name="item11" out-name="item7" type="waiting-event" comparator="0">
        <display-name>Waiting event</display-name>
        <in-binding>
            <bind name="trigger.ref" type="Trigger" export-name="taskTrigger">
                <description>Trigger waiting for a specific event before continuing workflow run.</description>
            </bind>
        </in-binding>
        <out-binding/>
        <position y="66.59680035721841" x="805.8976785761512"/>
    </workflow-item>
    <workflow-item name="item12" out-name="item11" type="task" comparator="0">
        <display-name>Create task trigger</display-name>
        <script encoded="false">const timeout = 60;     // Poll every 60 seconds

taskTrigger = PowerOperationTask.createEndOfTaskTrigger(timeout);




</script>
        <in-binding>
            <bind name="PowerOperationTask" type="VC:Task" export-name="PowerOperationTask"/>
        </in-binding>
        <out-binding>
            <bind name="taskTrigger" type="Trigger" export-name="taskTrigger"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="74.99761892860921" x="645.4488392880756"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>
